/*
 * This file is generated by jOOQ.
 */
package ca.nanometrics.halo.db;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Catalog;
import org.jooq.Sequence;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;

import ca.nanometrics.halo.db.tables.Asset;
import ca.nanometrics.halo.db.tables.AssetType;
import ca.nanometrics.halo.db.tables.Organization;
import ca.nanometrics.halo.db.tables.User;

/**
 * This class is generated by jOOQ.
 */
@Generated(value = { "http://www.jooq.org", "jOOQ version:3.11.7" }, comments = "This class is generated by jOOQ")
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Halo extends SchemaImpl
{

  private static final long serialVersionUID = -328435839;

  /**
   * The reference instance of <code>halo</code>
   */
  public static final Halo HALO = new Halo();

  /**
   * The table <code>halo.asset</code>.
   */
  public final Asset ASSET = ca.nanometrics.halo.db.tables.Asset.ASSET;

  /**
   * The table <code>halo.asset_type</code>.
   */
  public final AssetType ASSET_TYPE = ca.nanometrics.halo.db.tables.AssetType.ASSET_TYPE;

  /**
   * The table <code>halo.organization</code>.
   */
  public final Organization ORGANIZATION = ca.nanometrics.halo.db.tables.Organization.ORGANIZATION;

  /**
   * The table <code>halo.user</code>.
   */
  public final User USER = ca.nanometrics.halo.db.tables.User.USER;

  /**
   * No further instances allowed
   */
  private Halo()
  {
    super("halo", null);
  }

  /**
   * {@inheritDoc}
   */
  @Override
  public Catalog getCatalog()
  {
    return DefaultCatalog.DEFAULT_CATALOG;
  }

  @Override
  public final List<Sequence< ? >> getSequences()
  {
    List result = new ArrayList();
    result.addAll(getSequences0());
    return result;
  }

  private final List<Sequence< ? >> getSequences0()
  {
    return Arrays.<Sequence< ? >> asList(Sequences.ASSET_ID_SEQ, Sequences.ASSET_INSTANCE_ID_SEQ,
        Sequences.ASSET_TYPE_ID_SEQ, Sequences.DEPLOYMENT_ID_SEQ, Sequences.ORGANIZATION_ID_SEQ,
        Sequences.STATION_ID_SEQ, Sequences.TEMPLATE_ID_SEQ, Sequences.USER_ID_SEQ);
  }

  @Override
  public final List<Table< ? >> getTables()
  {
    List result = new ArrayList();
    result.addAll(getTables0());
    return result;
  }

  private final List<Table< ? >> getTables0()
  {
    return Arrays.<Table< ? >> asList(Asset.ASSET, AssetType.ASSET_TYPE, Organization.ORGANIZATION, User.USER);
  }
}
