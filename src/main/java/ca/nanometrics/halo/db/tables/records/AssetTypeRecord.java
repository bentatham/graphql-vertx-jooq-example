/*
 * This file is generated by jOOQ.
 */
package ca.nanometrics.halo.db.tables.records;


import ca.nanometrics.halo.db.tables.AssetType;

import io.github.jklingsporn.vertx.jooq.shared.internal.VertxPojo;

import java.time.Instant;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AssetTypeRecord extends UpdatableRecordImpl<AssetTypeRecord> implements VertxPojo, Record4<Integer, String, Instant, Instant> {

    private static final long serialVersionUID = 1140968793;

    /**
     * Setter for <code>halo.asset_type.asset_type_id</code>.
     */
    public AssetTypeRecord setAssetTypeId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>halo.asset_type.asset_type_id</code>.
     */
    public Integer getAssetTypeId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>halo.asset_type.asset_type_name</code>.
     */
    public AssetTypeRecord setAssetTypeName(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>halo.asset_type.asset_type_name</code>.
     */
    public String getAssetTypeName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>halo.asset_type.created_at</code>.
     */
    public AssetTypeRecord setCreatedAt(Instant value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>halo.asset_type.created_at</code>.
     */
    public Instant getCreatedAt() {
        return (Instant) get(2);
    }

    /**
     * Setter for <code>halo.asset_type.updated_at</code>.
     */
    public AssetTypeRecord setUpdatedAt(Instant value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>halo.asset_type.updated_at</code>.
     */
    public Instant getUpdatedAt() {
        return (Instant) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, Instant, Instant> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, Instant, Instant> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return AssetType.ASSET_TYPE.ASSET_TYPE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return AssetType.ASSET_TYPE.ASSET_TYPE_NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Instant> field3() {
        return AssetType.ASSET_TYPE.CREATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Instant> field4() {
        return AssetType.ASSET_TYPE.UPDATED_AT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer component1() {
        return getAssetTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getAssetTypeName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Instant component3() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Instant component4() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getAssetTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getAssetTypeName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Instant value3() {
        return getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Instant value4() {
        return getUpdatedAt();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssetTypeRecord value1(Integer value) {
        setAssetTypeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssetTypeRecord value2(String value) {
        setAssetTypeName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssetTypeRecord value3(Instant value) {
        setCreatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssetTypeRecord value4(Instant value) {
        setUpdatedAt(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AssetTypeRecord values(Integer value1, String value2, Instant value3, Instant value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AssetTypeRecord
     */
    public AssetTypeRecord() {
        super(AssetType.ASSET_TYPE);
    }

    /**
     * Create a detached, initialised AssetTypeRecord
     */
    public AssetTypeRecord(Integer assetTypeId, String assetTypeName, Instant createdAt, Instant updatedAt) {
        super(AssetType.ASSET_TYPE);

        set(0, assetTypeId);
        set(1, assetTypeName);
        set(2, createdAt);
        set(3, updatedAt);
    }

    public AssetTypeRecord(io.vertx.core.json.JsonObject json) {
        this();
        fromJson(json);
    }

    @Override
    public AssetTypeRecord fromJson(io.vertx.core.json.JsonObject json) {
        setAssetTypeId(json.getInteger("asset_type_id"));
        setAssetTypeName(json.getString("asset_type_name"));
        setCreatedAt(json.getInstant("created_at"));
        setUpdatedAt(json.getInstant("updated_at"));
        return this;
    }


    @Override
    public io.vertx.core.json.JsonObject toJson() {
        io.vertx.core.json.JsonObject json = new io.vertx.core.json.JsonObject();
        json.put("asset_type_id",getAssetTypeId());
        json.put("asset_type_name",getAssetTypeName());
        json.put("created_at",getCreatedAt());
        json.put("updated_at",getUpdatedAt());
        return json;
    }

}
